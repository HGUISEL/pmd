/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */
/* Generated By:JJTree: Do not edit this line. ASTNullLiteral.java */

package net.sourceforge.pmd.lang.java.ast;

import java.util.Optional;


/**
 * A field access expression.
 *
 * <pre>
 *
 * FieldAccess ::=  {@link ASTPrimaryExpression PrimaryExpression} "." {@link ASTName FieldName}
 *
 * </pre>
 */
public final class ASTFieldAccess extends AbstractJavaTypeNode implements ASTPrimaryExpression {
    ASTFieldAccess(int id) {
        super(id);
    }


    ASTFieldAccess(JavaParser p, int id) {
        super(p, id);
    }


    public Optional<ASTPrimaryExpression> getLeftHandSide() {
        return Optional.ofNullable(getFirstChildOfType(ASTPrimaryExpression.class));
    }


    public ASTName getNameNode() {
        return getFirstChildOfType(ASTName.class);
    }


    public String getFieldName() {
        return getNameNode().getImage();
    }


    @Override
    public Object jjtAccept(JavaParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }


    @Override
    public <T> void jjtAccept(SideEffectingVisitor<T> visitor, T data) {
        visitor.visit(this, data);
    }
}
