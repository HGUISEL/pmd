/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */
/* Generated By:JJTree: Do not edit this line. ASTNullLiteral.java */

package net.sourceforge.pmd.lang.java.ast;

/**
 * An ambigous name occurring in an expression context. Ideally we'd use a disambiguation pass to remove
 * all of those nodes from the AST passed to the rules. It's a crutch for now.
 *
 * <pre>
 *
 * ThisExpression ::= {@link ASTName AmbiguousName}
 *
 * </pre>
 */
public final class ASTAmbiguousNameExpr extends ASTName implements ASTPrimaryExpression {
    ASTAmbiguousNameExpr(int id) {
        super(id);
    }


    ASTAmbiguousNameExpr(JavaParser p, int id) {
        super(p, id);
    }


    /**
     * Accept the visitor. *
     */
    @Override
    public Object jjtAccept(JavaParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }


    @Override
    public <T> void jjtAccept(SideEffectingVisitor<T> visitor, T data) {
        visitor.visit(this, data);
    }
}
